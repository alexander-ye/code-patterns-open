---
import { CollectionEntry, getCollection } from "astro:content";
import { filterCollectionBySubfolder } from "../utils/generic";
import Layout from "../layouts/Layout.astro";
import SolutionArticleCard from "../components/content/Solutionarticlecard/Solutionarticlecard.astro";
import { sortEntriesByProblemNumber } from "../utils/leetcode";

const codingChallengePosts: CollectionEntry<"programming-challenge-solutions">[] =
  await getCollection("programming-challenge-solutions");

const leetCodePosts: CollectionEntry<"programming-challenge-solutions">[] =
  codingChallengePosts
    .filter((post: CollectionEntry<"programming-challenge-solutions">) => {
      return filterCollectionBySubfolder(post, "leetcode");
    })
    .sort(sortEntriesByProblemNumber);

const hackerRankPosts: CollectionEntry<"programming-challenge-solutions">[] =
  codingChallengePosts.filter(
    (post: CollectionEntry<"programming-challenge-solutions">) => {
      return filterCollectionBySubfolder(post, "hackerrank");
    }
  );
// return codingChallengePosts.map(entry => ({
//   params: { slug: entry.slug }, props: { entry },
// }));
---

<Layout title="Programming Challenge Solutions">
  <h1>Programming Challenge Solutions</h1>
  <a href="/programming-challenge-solutions/leetcode"><h2>LeetCode</h2></a>
  <section
    style="
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      grid-gap: 10px;"
  >
    {
      leetCodePosts.map((entry: CollectionEntry) => {
        const postSlug: string = `/${entry.collection}/${entry.slug}`;
        const postTitle: string = entry.data.title;
        const problemDifficulty: string = entry.data.src?.difficulty || "";
        return (
          <SolutionArticleCard
            href={postSlug}
            title={postTitle}
            difficulty={problemDifficulty}
          />
        );
      })
    }
  </section>
  <h2>HackerRank</h2>
  <section
    style="
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      grid-gap: 10px;"
  >
    {
      hackerRankPosts.map((entry: CollectionEntry) => {
        const postSlug: string = `/${entry.collection}/${entry.slug}`;
        const postTitle: string = entry.data.title;
        const problemDifficulty: string = entry.data.src?.difficulty || "";
        return (
          <SolutionArticleCard
            href={postSlug}
            title={postTitle}
            difficulty={problemDifficulty}
          />
        );
      })
    }
  </section>
</Layout>
